#BlueJ class context
comment0.params=pos\ dir\ canvasSizeU\ canvasSizeV\ pixelU\ pixelV\ viewingRange
comment0.target=Camera(Vector,\ Vector,\ float,\ float,\ int,\ int,\ float)
comment1.params=
comment1.target=Vector\ getUVect()
comment10.params=g1\ g2
comment10.target=int\ compare(GraphicObject,\ GraphicObject)
comment11.params=pUV\ p1UVref\ p2UVref
comment11.target=Point\ correctDepth(Point,\ Point,\ Point)
comment11.text=\r\n\ The\ two\ "reference\ points"\ p1UVref\ and\ p2UVref\ are\ assumed\ to\ have\ the\ right\ depth-values.\r\n\ pUV\ is\ assumed\ to\ be\ on\ the\ line\ which\ also\ contains\ p1UVref\ and\ p2UVref.\r\n
comment12.params=pUV\ p1UVref\ p2UVref
comment12.target=void\ correctDepthInt(Vector,\ Point,\ Point)
comment13.params=u\ p1UVrefU\ p1UVrefDepth\ p2UVrefU\ p2UVrefDepth
comment13.target=float\ correctDepthInt(int,\ int,\ float,\ int,\ float)
comment13.text=\r\n\ This\ is\ mainly\ for\ PX(U)Polygon.raster,\ the\ points\ are\ assumed\ to\ all\ have\ the\ same\ v-value.\r\n
comment14.params=u\ p1UVrefU\ p1UVrefDepth\ p2UVrefU\ p2UVrefDepth
comment14.target=float\ correctDepthInt(float,\ float,\ float,\ float,\ float)
comment14.text=\r\n\ This\ is\ mainly\ for\ PX(U)Polygon.raster,\ the\ points\ are\ assumed\ to\ all\ have\ the\ same\ v-value.\r\n
comment15.params=pUV
comment15.target=boolean\ isVisible(Point)
comment2.params=
comment2.target=Vector\ getVVect()
comment3.params=p\ uv\ vv\ d\ normalSqNeg
comment3.target=Point\ projectStraight(Point,\ Vector,\ Vector,\ float,\ float)
comment3.text=\r\n\ This\ is\ just\ a\ translation\ and\ a\ rotation\ of\ the\ coordinate\ system\ (center\ at\ the\ camera\ position,\ z-axis\ has\ the\ direction\ of\ this.dir).\r\n
comment4.params=p
comment4.target=Point\ projectStraight(Point)
comment5.params=p\ uv\ vv\ d\ normalSqNeg
comment5.target=Point\ projectToCanvas(Point,\ Vector,\ Vector,\ float,\ float)
comment5.text=\r\n\ Returned\ coordinates\ are\ u,v\ and\ depth.\r\n\ This\ expects\ points\ in\ front\ of\ the\ canvas\ (getPotentiallyVisibles\ deals\ with\ this).\r\n
comment6.params=p
comment6.target=Point\ projectToCanvas(Point)
comment7.params=ps
comment7.target=Point\ projectAStraightToCanvas(Point)
comment8.params=objs
comment8.target=java.util.ArrayList\ getPotentiallyVisiblesAndProject(java.util.ArrayList)
comment8.text=\r\n\ Potentially\ means\ in\ front\ of\ the\ canvas.\ This\ also\ cuts\ lines\ and\ polygons\ which\ are\ only\ partly\ in\ front\ of\ the\ canvas\ down\ to\ their\ potentially\ visible\ part.\r\n
comment9.params=objs
comment9.target=java.util.ArrayList\ orderRoughly(java.util.ArrayList)
numComments=16
